{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\display-test.app\\\\client\\\\src\\\\pages\\\\tests\\\\DeadPixelTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s ease;\n`;\n_c = TestContainer;\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n_c2 = ExitButton;\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n_c3 = FullScreenButton;\nconst ControlPanel = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.15);\n  width: 400px;\n  padding: ${props => props.isMinimized ? '1.25rem' : '2rem'};\n  color: #333;\n  transition: all 0.3s ease;\n  transform: translateY(${props => props.isMinimized ? 'calc(100% - 4rem)' : '0'});\n  backdrop-filter: blur(10px);\n  max-height: calc(100vh - 4rem);\n  overflow-y: auto;\n`;\n_c4 = ControlPanel;\nconst PanelHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${props => props.isMinimized ? '0' : '1.5rem'};\n  padding-bottom: ${props => props.isMinimized ? '0' : '1rem'};\n  border-bottom: ${props => props.isMinimized ? 'none' : '1px solid rgba(0, 0, 0, 0.1)'};\n\n  h2 {\n    margin: 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #333;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n_c5 = PanelHeader;\nconst MinimizeButton = styled.button`\n  background: #4169e1;\n  border: none;\n  color: white;\n  font-size: 1.75rem;\n  cursor: pointer;\n  width: 2.5rem;\n  height: 2.5rem;\n  line-height: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  padding: 0;\n  \n  &:hover {\n    background: #3658c5;\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c6 = MinimizeButton;\nconst Description = styled.p`\n  color: #666;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n`;\n_c7 = Description;\nconst Section = styled.div`\n  margin-bottom: 2rem;\n\n  h3 {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n_c8 = Section;\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n_c9 = ColorGrid;\nconst ColorButton = styled.button`\n  width: 100%;\n  aspect-ratio: 1;\n  border: 2px solid ${props => props.isSelected ? '#4169e1' : 'transparent'};\n  border-radius: 0.5rem;\n  cursor: pointer;\n  background: ${props => props.color};\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c10 = ColorButton;\nconst colors = [{\n  name: 'White',\n  value: '#FFFFFF'\n}, {\n  name: 'Black',\n  value: '#000000'\n}, {\n  name: 'Red',\n  value: '#FF0000'\n}, {\n  name: 'Green',\n  value: '#00FF00'\n}, {\n  name: 'Blue',\n  value: '#0000FF'\n}, {\n  name: 'Yellow',\n  value: '#FFFF00'\n}, {\n  name: 'Magenta',\n  value: '#FF00FF'\n}, {\n  name: 'Cyan',\n  value: '#00FFFF'\n}, {\n  name: 'Gray',\n  value: '#808080'\n}];\nconst DeadPixelTest = () => {\n  _s();\n  const [currentColor, setCurrentColor] = useState(0);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [autoChange, setAutoChange] = useState(false);\n  const [changeInterval, setChangeInterval] = useState(2000);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const isDarkColor = color => {\n    const hex = color.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    return r * 0.299 + g * 0.587 + b * 0.114 < 128;\n  };\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch(err => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n  useEffect(() => {\n    let intervalId;\n    if (autoChange) {\n      intervalId = setInterval(() => {\n        setCurrentColor(prev => (prev + 1) % colors.length);\n      }, changeInterval);\n    }\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [autoChange, changeInterval]);\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    style: {\n      backgroundColor: colors[currentColor].value\n    },\n    children: [/*#__PURE__*/_jsxDEV(ExitButton, {\n      onClick: () => window.history.back(),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M15 19l-7-7 7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), \"Exit Test\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenButton, {\n      onClick: toggleFullScreen,\n      children: isFullScreen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), \"Exit Full Screen\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3 8V3h5M3 16v5h5m8-5v5h5M21 8V3h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), \"Full Screen\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      isMinimized: isMinimized,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        isMinimized: isMinimized,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dead Pixel Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MinimizeButton, {\n          onClick: () => setIsMinimized(!isMinimized),\n          children: isMinimized ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M18 15l-6-6-6 6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M6 9l6 6 6-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Description, {\n          children: \"Test your display for dead or stuck pixels by cycling through different colors. A dead pixel will appear black on all colors, while a stuck pixel will remain one color regardless of the background.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Background Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorGrid, {\n            children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorButton, {\n              color: color.value,\n              isSelected: currentColor === index,\n              onClick: () => setCurrentColor(index),\n              title: color.name\n            }, color.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Auto Cycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: autoChange,\n              onChange: e => setAutoChange(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), ' ', \"Enable auto color change\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), autoChange && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"500\",\n              max: \"5000\",\n              step: \"500\",\n              value: changeInterval,\n              onChange: e => setChangeInterval(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [changeInterval / 1000, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(DeadPixelTest, \"pymSEHjIMfECdIwPjJL00wqdweg=\");\n_c11 = DeadPixelTest;\nexport default DeadPixelTest;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"ExitButton\");\n$RefreshReg$(_c3, \"FullScreenButton\");\n$RefreshReg$(_c4, \"ControlPanel\");\n$RefreshReg$(_c5, \"PanelHeader\");\n$RefreshReg$(_c6, \"MinimizeButton\");\n$RefreshReg$(_c7, \"Description\");\n$RefreshReg$(_c8, \"Section\");\n$RefreshReg$(_c9, \"ColorGrid\");\n$RefreshReg$(_c10, \"ColorButton\");\n$RefreshReg$(_c11, \"DeadPixelTest\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","TestContainer","div","_c","ExitButton","button","_c2","FullScreenButton","_c3","ControlPanel","props","isMinimized","_c4","PanelHeader","_c5","MinimizeButton","_c6","Description","p","_c7","Section","_c8","ColorGrid","_c9","ColorButton","isSelected","color","_c10","colors","name","value","DeadPixelTest","_s","currentColor","setCurrentColor","setIsMinimized","autoChange","setAutoChange","changeInterval","setChangeInterval","isFullScreen","setIsFullScreen","isDarkColor","hex","replace","r","parseInt","substr","g","b","toggleFullScreen","document","fullscreenElement","documentElement","requestFullscreen","catch","err","console","log","message","exitFullscreen","intervalId","setInterval","prev","length","clearInterval","handleFullScreenChange","addEventListener","removeEventListener","style","backgroundColor","children","onClick","window","history","back","viewBox","fill","stroke","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","type","checked","onChange","e","target","min","max","step","Number","_c11","$RefreshReg$"],"sources":["c:/Users/bryan/Documents/GitHub/display-test.app/client/src/pages/tests/DeadPixelTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s ease;\n`;\n\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n\nconst ControlPanel = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.15);\n  width: 400px;\n  padding: ${props => props.isMinimized ? '1.25rem' : '2rem'};\n  color: #333;\n  transition: all 0.3s ease;\n  transform: translateY(${props => props.isMinimized ? 'calc(100% - 4rem)' : '0'});\n  backdrop-filter: blur(10px);\n  max-height: calc(100vh - 4rem);\n  overflow-y: auto;\n`;\n\nconst PanelHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${props => props.isMinimized ? '0' : '1.5rem'};\n  padding-bottom: ${props => props.isMinimized ? '0' : '1rem'};\n  border-bottom: ${props => props.isMinimized ? 'none' : '1px solid rgba(0, 0, 0, 0.1)'};\n\n  h2 {\n    margin: 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #333;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n\nconst MinimizeButton = styled.button`\n  background: #4169e1;\n  border: none;\n  color: white;\n  font-size: 1.75rem;\n  cursor: pointer;\n  width: 2.5rem;\n  height: 2.5rem;\n  line-height: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  padding: 0;\n  \n  &:hover {\n    background: #3658c5;\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Description = styled.p`\n  color: #666;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 2rem;\n\n  h3 {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n\nconst ColorGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n\nconst ColorButton = styled.button`\n  width: 100%;\n  aspect-ratio: 1;\n  border: 2px solid ${props => props.isSelected ? '#4169e1' : 'transparent'};\n  border-radius: 0.5rem;\n  cursor: pointer;\n  background: ${props => props.color};\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst colors = [\n  { name: 'White', value: '#FFFFFF' },\n  { name: 'Black', value: '#000000' },\n  { name: 'Red', value: '#FF0000' },\n  { name: 'Green', value: '#00FF00' },\n  { name: 'Blue', value: '#0000FF' },\n  { name: 'Yellow', value: '#FFFF00' },\n  { name: 'Magenta', value: '#FF00FF' },\n  { name: 'Cyan', value: '#00FFFF' },\n  { name: 'Gray', value: '#808080' }\n];\n\nconst DeadPixelTest = () => {\n  const [currentColor, setCurrentColor] = useState(0);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [autoChange, setAutoChange] = useState(false);\n  const [changeInterval, setChangeInterval] = useState(2000);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const isDarkColor = (color) => {\n    const hex = color.replace('#', '');\n    const r = parseInt(hex.substr(0, 2), 16);\n    const g = parseInt(hex.substr(2, 2), 16);\n    const b = parseInt(hex.substr(4, 2), 16);\n    return (r * 0.299 + g * 0.587 + b * 0.114) < 128;\n  };\n\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch((err) => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n\n  useEffect(() => {\n    let intervalId;\n    if (autoChange) {\n      intervalId = setInterval(() => {\n        setCurrentColor((prev) => (prev + 1) % colors.length);\n      }, changeInterval);\n    }\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [autoChange, changeInterval]);\n\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n\n  return (\n    <TestContainer style={{ backgroundColor: colors[currentColor].value }}>\n      <ExitButton onClick={() => window.history.back()}>\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n          <path d=\"M15 19l-7-7 7-7\" />\n        </svg>\n        Exit Test\n      </ExitButton>\n\n      <FullScreenButton onClick={toggleFullScreen}>\n        {isFullScreen ? (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\" />\n            </svg>\n            Exit Full Screen\n          </>\n        ) : (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M3 8V3h5M3 16v5h5m8-5v5h5M21 8V3h-5\" />\n            </svg>\n            Full Screen\n          </>\n        )}\n      </FullScreenButton>\n\n      <ControlPanel isMinimized={isMinimized}>\n        <PanelHeader isMinimized={isMinimized}>\n          <h2>Dead Pixel Controls</h2>\n          <MinimizeButton onClick={() => setIsMinimized(!isMinimized)}>\n            {isMinimized ? (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M18 15l-6-6-6 6\" />\n              </svg>\n            ) : (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M6 9l6 6 6-6\" />\n              </svg>\n            )}\n          </MinimizeButton>\n        </PanelHeader>\n\n        {!isMinimized && (\n          <>\n            <Description>\n              Test your display for dead or stuck pixels by cycling through different colors. \n              A dead pixel will appear black on all colors, while a stuck pixel will remain \n              one color regardless of the background.\n            </Description>\n\n            <Section>\n              <h3>Background Color</h3>\n              <ColorGrid>\n                {colors.map((color, index) => (\n                  <ColorButton\n                    key={color.name}\n                    color={color.value}\n                    isSelected={currentColor === index}\n                    onClick={() => setCurrentColor(index)}\n                    title={color.name}\n                  />\n                ))}\n              </ColorGrid>\n            </Section>\n\n            <Section>\n              <h3>Auto Cycle</h3>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={autoChange}\n                  onChange={(e) => setAutoChange(e.target.checked)}\n                />\n                {' '}Enable auto color change\n              </label>\n              {autoChange && (\n                <div>\n                  <input\n                    type=\"range\"\n                    min=\"500\"\n                    max=\"5000\"\n                    step=\"500\"\n                    value={changeInterval}\n                    onChange={(e) => setChangeInterval(Number(e.target.value))}\n                  />\n                  <span>{changeInterval / 1000}s</span>\n                </div>\n              )}\n            </Section>\n          </>\n        )}\n      </ControlPanel>\n    </TestContainer>\n  );\n};\n\nexport default DeadPixelTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}