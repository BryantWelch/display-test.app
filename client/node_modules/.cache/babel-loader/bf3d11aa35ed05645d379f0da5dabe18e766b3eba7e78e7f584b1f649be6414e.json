{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\display-test.app\\\\client\\\\src\\\\pages\\\\tests\\\\UniformityTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n_c = TestContainer;\nconst Controls = styled.div`\n  position: fixed;\n  top: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.8);\n  padding: 1rem;\n  border-radius: 0.5rem;\n  display: flex;\n  gap: 1rem;\n`;\n_c2 = Controls;\nconst Button = styled.button`\n  background: var(--primary);\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n_c3 = Button;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1px;\n  background: #333;\n  width: 100%;\n  height: 100%;\n`;\n_c4 = Grid;\nconst Cell = styled.div`\n  background: ${props => props.color};\n  width: 100%;\n  height: 100%;\n`;\n_c5 = Cell;\nconst UniformityTest = () => {\n  _s();\n  const [brightness, setBrightness] = useState(50);\n  const handleBrightnessChange = delta => {\n    setBrightness(prev => Math.max(0, Math.min(100, prev + delta)));\n  };\n  const color = `rgb(${brightness * 2.55}, ${brightness * 2.55}, ${brightness * 2.55})`;\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleBrightnessChange(-10),\n        children: \"Darker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleBrightnessChange(10),\n        children: \"Brighter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.history.back(),\n        children: \"Exit Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: Array(9).fill(0).map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {\n        color: color\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(UniformityTest, \"YoGpRajrXTeynK/BUo8rqVTutso=\");\n_c6 = UniformityTest;\nexport default UniformityTest;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"Controls\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"Grid\");\n$RefreshReg$(_c5, \"Cell\");\n$RefreshReg$(_c6, \"UniformityTest\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","TestContainer","div","_c","Controls","_c2","Button","button","_c3","Grid","_c4","Cell","props","color","_c5","UniformityTest","_s","brightness","setBrightness","handleBrightnessChange","delta","prev","Math","max","min","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","window","history","back","Array","fill","map","_","i","_c6","$RefreshReg$"],"sources":["c:/Users/bryan/Documents/GitHub/display-test.app/client/src/pages/tests/UniformityTest.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Controls = styled.div`\n  position: fixed;\n  top: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.8);\n  padding: 1rem;\n  border-radius: 0.5rem;\n  display: flex;\n  gap: 1rem;\n`;\n\nconst Button = styled.button`\n  background: var(--primary);\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 1px;\n  background: #333;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Cell = styled.div`\n  background: ${props => props.color};\n  width: 100%;\n  height: 100%;\n`;\n\nconst UniformityTest = () => {\n  const [brightness, setBrightness] = useState(50);\n\n  const handleBrightnessChange = (delta) => {\n    setBrightness(prev => Math.max(0, Math.min(100, prev + delta)));\n  };\n\n  const color = `rgb(${brightness * 2.55}, ${brightness * 2.55}, ${brightness * 2.55})`;\n\n  return (\n    <TestContainer>\n      <Controls>\n        <Button onClick={() => handleBrightnessChange(-10)}>Darker</Button>\n        <Button onClick={() => handleBrightnessChange(10)}>Brighter</Button>\n        <Button onClick={() => window.history.back()}>Exit Test</Button>\n      </Controls>\n      <Grid>\n        {Array(9).fill(0).map((_, i) => (\n          <Cell key={i} color={color} />\n        ))}\n      </Grid>\n    </TestContainer>\n  );\n};\n\nexport default UniformityTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}