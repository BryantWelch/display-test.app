{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\display-test.app\\\\client\\\\src\\\\pages\\\\tests\\\\ColorGradientTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ControlPanel, PanelHeader, MinimizeButton, Section, RangeControl, ResetButton, ToggleButton, Description } from '../../components/Controls';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.gradient};\n  transition: background 0.3s ease;\n`;\n_c = TestContainer;\nconst GradientPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  background: ${props => props.gradient};\n`;\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n_c2 = ExitButton;\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n_c3 = FullScreenButton;\nconst ColorPreview = styled.div`\n  width: 100%;\n  height: 40px;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  background: ${props => props.gradient};\n  border: 1px solid rgba(0, 0, 0, 0.1);\n`;\n_c4 = ColorPreview;\nconst ColorGradientTest = () => {\n  _s();\n  const [steps, setSteps] = useState(32);\n  const [selectedColor, setSelectedColor] = useState('white');\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [gradientDirection, setGradientDirection] = useState('horizontal');\n  const [gradientType, setGradientType] = useState('linear');\n  const [distribution, setDistribution] = useState('linear');\n  const handleReset = () => {\n    setSteps(32);\n    setSelectedColor('white');\n    setGradientDirection('horizontal');\n    setGradientType('linear');\n    setDistribution('linear');\n  };\n  const getColor = () => {\n    const colors = {\n      white: 'rgb(255, 255, 255)',\n      red: 'rgb(255, 0, 0)',\n      green: 'rgb(0, 255, 0)',\n      blue: 'rgb(0, 0, 255)',\n      magenta: 'rgb(255, 0, 255)',\n      yellow: 'rgb(255, 255, 0)',\n      cyan: 'rgb(0, 255, 255)'\n    };\n    return colors[selectedColor] || colors.white;\n  };\n  const getGradientDirection = () => {\n    switch (gradientDirection) {\n      case 'horizontal':\n        return 'to right';\n      case 'vertical':\n        return 'to bottom';\n      case 'diagonal-1':\n        return '45deg';\n      case 'diagonal-2':\n        return '135deg';\n      default:\n        return 'to right';\n    }\n  };\n  const distributeSteps = (i, totalSteps) => {\n    if (distribution === 'linear') {\n      return i / totalSteps;\n    }\n    // Emphasize dark regions with more steps\n    return Math.pow(i / totalSteps, 2);\n  };\n  const generateGradient = (stepCount = steps) => {\n    const targetColor = getColor();\n    const match = targetColor.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    const [_, r, g, b] = match.map(Number);\n    if (gradientType === 'radial') {\n      return generateRadialGradient(r, g, b, stepCount);\n    }\n\n    // Create distinct color bands\n    const gradientStops = [];\n    for (let i = 0; i <= stepCount; i++) {\n      const ratio = distributeSteps(i, stepCount);\n      const startPercent = i / stepCount * 100;\n      const endPercent = (i + 1) / stepCount * 100;\n      const currentR = Math.round(r * ratio);\n      const currentG = Math.round(g * ratio);\n      const currentB = Math.round(b * ratio);\n      const color = `rgb(${currentR}, ${currentG}, ${currentB})`;\n      if (i < stepCount) {\n        gradientStops.push(`${color} ${startPercent}%`);\n        gradientStops.push(`${color} ${endPercent}%`);\n      }\n    }\n    const direction = getGradientDirection();\n    return `linear-gradient(${direction}, ${gradientStops.join(', ')})`;\n  };\n  const generateRadialGradient = (r, g, b, stepCount) => {\n    const gradientStops = [];\n    for (let i = 0; i <= stepCount; i++) {\n      const ratio = distributeSteps(i, stepCount);\n      const percent = i / stepCount * 100;\n      const currentR = Math.round(r * ratio);\n      const currentG = Math.round(g * ratio);\n      const currentB = Math.round(b * ratio);\n      const color = `rgb(${currentR}, ${currentG}, ${currentB})`;\n      gradientStops.push(`${color} ${percent}%`);\n    }\n    return `radial-gradient(circle at center, ${gradientStops.join(', ')})`;\n  };\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch(err => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    gradient: generateGradient(),\n    children: [/*#__PURE__*/_jsxDEV(ExitButton, {\n      onClick: () => window.history.back(),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M15 19l-7-7 7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), \"Exit Test\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenButton, {\n      onClick: toggleFullScreen,\n      children: isFullScreen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), \"Exit Full Screen\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3 3h7v7H3zM14 3h7v7h-7zM14 14h7v7h-7zM3 14h7v7H3z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), \"Full Screen\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      isMinimized: isMinimized,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        isMinimized: isMinimized,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"GRADIENT CONTROLS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MinimizeButton, {\n          onClick: () => setIsMinimized(!isMinimized),\n          children: isMinimized ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M18 15l-6-6-6 6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M6 9l6 6 6-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Description, {\n          children: \"Test your display's gradient rendering capabilities and check for color banding. Adjust the target color and number of steps to evaluate smooth color transitions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Target Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n            gradient: generateGradient()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '0.5rem'\n            },\n            children: ['white', 'red', 'green', 'blue', 'magenta', 'yellow', 'cyan'].map(color => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              active: selectedColor === color,\n              onClick: () => setSelectedColor(color),\n              children: color.charAt(0).toUpperCase() + color.slice(1)\n            }, color, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Gradient Steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RangeControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Steps: \", steps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"8\",\n              max: \"256\",\n              step: \"8\",\n              value: steps,\n              onChange: e => setSteps(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Gradient Direction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '0.5rem'\n            },\n            children: ['horizontal', 'vertical', 'diagonal-1', 'diagonal-2'].map(direction => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              active: gradientDirection === direction,\n              onClick: () => setGradientDirection(direction),\n              children: direction.charAt(0).toUpperCase() + direction.slice(1)\n            }, direction, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Gradient Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '0.5rem'\n            },\n            children: ['linear', 'radial'].map(type => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              active: gradientType === type,\n              onClick: () => setGradientType(type),\n              children: type.charAt(0).toUpperCase() + type.slice(1)\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Step Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '0.5rem'\n            },\n            children: ['linear', 'non-linear'].map(dist => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              active: distribution === dist,\n              onClick: () => setDistribution(dist),\n              children: dist.charAt(0).toUpperCase() + dist.slice(1)\n            }, dist, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: /*#__PURE__*/_jsxDEV(ResetButton, {\n            onClick: handleReset,\n            children: \"Reset Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        background: generateGradient()\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorGradientTest, \"vcS7PTpCcfjhK30M8gSlSdjoyzc=\");\n_c5 = ColorGradientTest;\nexport default ColorGradientTest;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"ExitButton\");\n$RefreshReg$(_c3, \"FullScreenButton\");\n$RefreshReg$(_c4, \"ColorPreview\");\n$RefreshReg$(_c5, \"ColorGradientTest\");","map":{"version":3,"names":["React","useState","useEffect","styled","ControlPanel","PanelHeader","MinimizeButton","Section","RangeControl","ResetButton","ToggleButton","Description","jsxDEV","_jsxDEV","Fragment","_Fragment","TestContainer","div","props","gradient","_c","GradientPanel","ExitButton","button","_c2","FullScreenButton","_c3","ColorPreview","_c4","ColorGradientTest","_s","steps","setSteps","selectedColor","setSelectedColor","isMinimized","setIsMinimized","isFullScreen","setIsFullScreen","gradientDirection","setGradientDirection","gradientType","setGradientType","distribution","setDistribution","handleReset","getColor","colors","white","red","green","blue","magenta","yellow","cyan","getGradientDirection","distributeSteps","i","totalSteps","Math","pow","generateGradient","stepCount","targetColor","match","_","r","g","b","map","Number","generateRadialGradient","gradientStops","ratio","startPercent","endPercent","currentR","round","currentG","currentB","color","push","direction","join","percent","handleFullScreenChange","document","fullscreenElement","addEventListener","removeEventListener","toggleFullScreen","documentElement","requestFullscreen","catch","err","console","log","message","exitFullscreen","children","onClick","window","history","back","viewBox","fill","stroke","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","active","charAt","toUpperCase","slice","type","min","max","step","value","onChange","e","target","dist","flex","background","_c5","$RefreshReg$"],"sources":["c:/Users/bryan/Documents/GitHub/display-test.app/client/src/pages/tests/ColorGradientTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ControlPanel, PanelHeader, MinimizeButton, Section, RangeControl, ResetButton, ToggleButton, Description } from '../../components/Controls';\n\nconst TestContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.gradient};\n  transition: background 0.3s ease;\n`;\n\nconst GradientPanel = styled.div`\n  width: 100%;\n  height: 100%;\n  background: ${props => props.gradient};\n`;\n\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n\nconst ColorPreview = styled.div`\n  width: 100%;\n  height: 40px;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  background: ${props => props.gradient};\n  border: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst ColorGradientTest = () => {\n  const [steps, setSteps] = useState(32);\n  const [selectedColor, setSelectedColor] = useState('white');\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [gradientDirection, setGradientDirection] = useState('horizontal');\n  const [gradientType, setGradientType] = useState('linear');\n  const [distribution, setDistribution] = useState('linear');\n\n  const handleReset = () => {\n    setSteps(32);\n    setSelectedColor('white');\n    setGradientDirection('horizontal');\n    setGradientType('linear');\n    setDistribution('linear');\n  };\n\n  const getColor = () => {\n    const colors = {\n      white: 'rgb(255, 255, 255)',\n      red: 'rgb(255, 0, 0)',\n      green: 'rgb(0, 255, 0)',\n      blue: 'rgb(0, 0, 255)',\n      magenta: 'rgb(255, 0, 255)',\n      yellow: 'rgb(255, 255, 0)',\n      cyan: 'rgb(0, 255, 255)'\n    };\n    return colors[selectedColor] || colors.white;\n  };\n\n  const getGradientDirection = () => {\n    switch (gradientDirection) {\n      case 'horizontal':\n        return 'to right';\n      case 'vertical':\n        return 'to bottom';\n      case 'diagonal-1':\n        return '45deg';\n      case 'diagonal-2':\n        return '135deg';\n      default:\n        return 'to right';\n    }\n  };\n\n  const distributeSteps = (i, totalSteps) => {\n    if (distribution === 'linear') {\n      return i / totalSteps;\n    }\n    // Emphasize dark regions with more steps\n    return Math.pow(i / totalSteps, 2);\n  };\n\n  const generateGradient = (stepCount = steps) => {\n    const targetColor = getColor();\n    const match = targetColor.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    const [_, r, g, b] = match.map(Number);\n    \n    if (gradientType === 'radial') {\n      return generateRadialGradient(r, g, b, stepCount);\n    }\n\n    // Create distinct color bands\n    const gradientStops = [];\n    for (let i = 0; i <= stepCount; i++) {\n      const ratio = distributeSteps(i, stepCount);\n      const startPercent = (i / stepCount) * 100;\n      const endPercent = ((i + 1) / stepCount) * 100;\n      \n      const currentR = Math.round(r * ratio);\n      const currentG = Math.round(g * ratio);\n      const currentB = Math.round(b * ratio);\n      const color = `rgb(${currentR}, ${currentG}, ${currentB})`;\n      \n      if (i < stepCount) {\n        gradientStops.push(`${color} ${startPercent}%`);\n        gradientStops.push(`${color} ${endPercent}%`);\n      }\n    }\n\n    const direction = getGradientDirection();\n    return `linear-gradient(${direction}, ${gradientStops.join(', ')})`;\n  };\n\n  const generateRadialGradient = (r, g, b, stepCount) => {\n    const gradientStops = [];\n    for (let i = 0; i <= stepCount; i++) {\n      const ratio = distributeSteps(i, stepCount);\n      const percent = (i / stepCount) * 100;\n      \n      const currentR = Math.round(r * ratio);\n      const currentG = Math.round(g * ratio);\n      const currentB = Math.round(b * ratio);\n      const color = `rgb(${currentR}, ${currentG}, ${currentB})`;\n      \n      gradientStops.push(`${color} ${percent}%`);\n    }\n\n    return `radial-gradient(circle at center, ${gradientStops.join(', ')})`;\n  };\n\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch((err) => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n\n  return (\n    <TestContainer gradient={generateGradient()}>\n      <ExitButton onClick={() => window.history.back()}>\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n          <path d=\"M15 19l-7-7 7-7\" />\n        </svg>\n        Exit Test\n      </ExitButton>\n\n      <FullScreenButton onClick={toggleFullScreen}>\n        {isFullScreen ? (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\" />\n            </svg>\n            Exit Full Screen\n          </>\n        ) : (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M3 3h7v7H3zM14 3h7v7h-7zM14 14h7v7h-7zM3 14h7v7H3z\" />\n            </svg>\n            Full Screen\n          </>\n        )}\n      </FullScreenButton>\n\n      <ControlPanel isMinimized={isMinimized}>\n        <PanelHeader isMinimized={isMinimized}>\n          <h2>GRADIENT CONTROLS</h2>\n          <MinimizeButton onClick={() => setIsMinimized(!isMinimized)}>\n            {isMinimized ? (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M18 15l-6-6-6 6\" />\n              </svg>\n            ) : (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M6 9l6 6 6-6\" />\n              </svg>\n            )}\n          </MinimizeButton>\n        </PanelHeader>\n\n        {!isMinimized && (\n          <>\n            <Description>\n              Test your display's gradient rendering capabilities and check for color banding.\n              Adjust the target color and number of steps to evaluate smooth color transitions.\n            </Description>\n\n            <Section>\n              <h3>Target Color</h3>\n              <ColorPreview gradient={generateGradient()} />\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '0.5rem' }}>\n                {['white', 'red', 'green', 'blue', 'magenta', 'yellow', 'cyan'].map(color => (\n                  <ToggleButton\n                    key={color}\n                    active={selectedColor === color}\n                    onClick={() => setSelectedColor(color)}\n                  >\n                    {color.charAt(0).toUpperCase() + color.slice(1)}\n                  </ToggleButton>\n                ))}\n              </div>\n            </Section>\n\n            <Section>\n              <h3>Gradient Steps</h3>\n              <RangeControl>\n                <label>\n                  <span>Steps: {steps}</span>\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"8\"\n                  max=\"256\"\n                  step=\"8\"\n                  value={steps}\n                  onChange={(e) => setSteps(Number(e.target.value))}\n                />\n              </RangeControl>\n            </Section>\n\n            <Section>\n              <h3>Gradient Direction</h3>\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '0.5rem' }}>\n                {['horizontal', 'vertical', 'diagonal-1', 'diagonal-2'].map(direction => (\n                  <ToggleButton\n                    key={direction}\n                    active={gradientDirection === direction}\n                    onClick={() => setGradientDirection(direction)}\n                  >\n                    {direction.charAt(0).toUpperCase() + direction.slice(1)}\n                  </ToggleButton>\n                ))}\n              </div>\n            </Section>\n\n            <Section>\n              <h3>Gradient Type</h3>\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '0.5rem' }}>\n                {['linear', 'radial'].map(type => (\n                  <ToggleButton\n                    key={type}\n                    active={gradientType === type}\n                    onClick={() => setGradientType(type)}\n                  >\n                    {type.charAt(0).toUpperCase() + type.slice(1)}\n                  </ToggleButton>\n                ))}\n              </div>\n            </Section>\n\n            <Section>\n              <h3>Step Distribution</h3>\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '0.5rem' }}>\n                {['linear', 'non-linear'].map(dist => (\n                  <ToggleButton\n                    key={dist}\n                    active={distribution === dist}\n                    onClick={() => setDistribution(dist)}\n                  >\n                    {dist.charAt(0).toUpperCase() + dist.slice(1)}\n                  </ToggleButton>\n                ))}\n              </div>\n            </Section>\n\n            <Section>\n              <ResetButton onClick={handleReset}>Reset Settings</ResetButton>\n            </Section>\n          </>\n        )}\n      </ControlPanel>\n\n      <div style={{ flex: 1, background: generateGradient() }} />\n    </TestContainer>\n  );\n};\n\nexport default ColorGradientTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}