{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\bryan\\\\Documents\\\\GitHub\\\\display-test.app\\\\client\\\\src\\\\pages\\\\tests\\\\UniformityTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.color};\n  transition: background-color 0.3s ease;\n`;\n_c = TestContainer;\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n_c2 = ExitButton;\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n_c3 = FullScreenButton;\nconst ControlPanel = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.15);\n  width: 400px;\n  padding: ${props => props.isMinimized ? '1.25rem' : '2rem'};\n  color: #333;\n  transition: all 0.3s ease;\n  transform: translateY(${props => props.isMinimized ? 'calc(100% - 4rem)' : '0'});\n  backdrop-filter: blur(10px);\n  max-height: calc(100vh - 4rem);\n  overflow-y: auto;\n`;\n_c4 = ControlPanel;\nconst PanelHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${props => props.isMinimized ? '0' : '1.5rem'};\n  padding-bottom: ${props => props.isMinimized ? '0' : '1rem'};\n  border-bottom: ${props => props.isMinimized ? 'none' : '1px solid rgba(0, 0, 0, 0.1)'};\n\n  h2 {\n    margin: 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #333;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n_c5 = PanelHeader;\nconst MinimizeButton = styled.button`\n  background: #4169e1;\n  border: none;\n  color: white;\n  font-size: 1.75rem;\n  cursor: pointer;\n  width: 2.5rem;\n  height: 2.5rem;\n  line-height: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  padding: 0;\n  \n  &:hover {\n    background: #3658c5;\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n_c6 = MinimizeButton;\nconst Description = styled.p`\n  color: #666;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n`;\n_c7 = Description;\nconst Section = styled.div`\n  margin-bottom: 2rem;\n\n  h3 {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n_c8 = Section;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.columns}, 1fr);\n  gap: ${props => props.showGridLines ? '1px' : '0'};\n  background: ${props => props.showGridLines ? '#333' : 'transparent'};\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n_c9 = Grid;\nconst Cell = styled.div`\n  background: ${props => props.color};\n  width: 100%;\n  height: 100%;\n  transition: background-color 0.3s ease;\n`;\n_c10 = Cell;\nconst ColorPreview = styled.div`\n  width: 100%;\n  height: 40px;\n  background: ${props => props.color};\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n`;\n_c11 = ColorPreview;\nconst RangeControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n\n  label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #666;\n  }\n\n  input[type=\"range\"] {\n    width: 100%;\n  }\n`;\n_c12 = RangeControl;\nconst ToggleButton = styled.button`\n  background: ${props => props.active ? '#4169e1' : '#f0f0f0'};\n  color: ${props => props.active ? 'white' : '#666'};\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  width: 100%;\n  \n  &:hover {\n    background: ${props => props.active ? '#3658c5' : '#e0e0e0'};\n  }\n`;\n_c13 = ToggleButton;\nconst UniformityTest = () => {\n  _s();\n  const [brightness, setBrightness] = useState(50);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [showGridLines, setShowGridLines] = useState(false);\n  const [gridSize, setGridSize] = useState(3);\n  const [selectedColor, setSelectedColor] = useState('white');\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch(err => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n  const getBackgroundColor = () => {\n    if (selectedColor === 'white') {\n      return `rgb(${brightness * 2.55}, ${brightness * 2.55}, ${brightness * 2.55})`;\n    }\n    const colors = {\n      red: `rgb(${brightness * 2.55}, 0, 0)`,\n      green: `rgb(0, ${brightness * 2.55}, 0)`,\n      blue: `rgb(0, 0, ${brightness * 2.55})`,\n      black: 'rgb(0, 0, 0)'\n    };\n    return colors[selectedColor] || colors.white;\n  };\n  const handleReset = () => {\n    setBrightness(50);\n    setGridSize(3);\n    setShowGridLines(false);\n    setSelectedColor('white');\n  };\n  return /*#__PURE__*/_jsxDEV(TestContainer, {\n    color: getBackgroundColor(),\n    children: [/*#__PURE__*/_jsxDEV(ExitButton, {\n      onClick: () => window.history.back(),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        strokeWidth: \"2\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M15 19l-7-7 7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), \"Exit Test\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreenButton, {\n      onClick: toggleFullScreen,\n      children: isFullScreen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), \"Exit Full Screen\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3 8V3h5M3 16v5h5m8-5v5h5M21 8V3h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), \"Full Screen\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), showGridLines && /*#__PURE__*/_jsxDEV(Grid, {\n      columns: gridSize,\n      showGridLines: showGridLines,\n      children: Array(gridSize * gridSize).fill(0).map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {\n        color: getBackgroundColor()\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      isMinimized: isMinimized,\n      children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n        isMinimized: isMinimized,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Uniformity Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MinimizeButton, {\n          onClick: () => setIsMinimized(!isMinimized),\n          children: isMinimized ? /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M18 15l-6-6-6 6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M6 9l6 6 6-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), !isMinimized && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Description, {\n          children: \"Test your display's color and brightness uniformity across the entire screen. Use different colors and grid patterns to identify any inconsistencies in backlight distribution or color reproduction.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Background Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ColorPreview, {\n            color: getBackgroundColor()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(2, 1fr)',\n              gap: '0.5rem',\n              marginBottom: '1rem'\n            },\n            children: ['white', 'red', 'green', 'blue', 'black'].map(color => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              active: selectedColor === color,\n              onClick: () => setSelectedColor(color),\n              children: color.charAt(0).toUpperCase() + color.slice(1)\n            }, color, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Brightness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RangeControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Level: \", brightness, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"0\",\n              max: \"100\",\n              value: brightness,\n              onChange: e => setBrightness(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Grid Pattern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            active: showGridLines,\n            onClick: () => setShowGridLines(!showGridLines),\n            style: {\n              marginBottom: '1rem'\n            },\n            children: showGridLines ? 'Hide Grid' : 'Show Grid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), showGridLines && /*#__PURE__*/_jsxDEV(RangeControl, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Grid Size: \", gridSize, \"x\", gridSize]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"2\",\n              max: \"8\",\n              value: gridSize,\n              onChange: e => setGridSize(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Section, {\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            onClick: handleReset,\n            children: \"Reset Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(UniformityTest, \"bBbOWADewrZoCnC6N0jeOl1Xg04=\");\n_c14 = UniformityTest;\nexport default UniformityTest;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"TestContainer\");\n$RefreshReg$(_c2, \"ExitButton\");\n$RefreshReg$(_c3, \"FullScreenButton\");\n$RefreshReg$(_c4, \"ControlPanel\");\n$RefreshReg$(_c5, \"PanelHeader\");\n$RefreshReg$(_c6, \"MinimizeButton\");\n$RefreshReg$(_c7, \"Description\");\n$RefreshReg$(_c8, \"Section\");\n$RefreshReg$(_c9, \"Grid\");\n$RefreshReg$(_c10, \"Cell\");\n$RefreshReg$(_c11, \"ColorPreview\");\n$RefreshReg$(_c12, \"RangeControl\");\n$RefreshReg$(_c13, \"ToggleButton\");\n$RefreshReg$(_c14, \"UniformityTest\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","TestContainer","div","props","color","_c","ExitButton","button","_c2","FullScreenButton","_c3","ControlPanel","isMinimized","_c4","PanelHeader","_c5","MinimizeButton","_c6","Description","p","_c7","Section","_c8","Grid","columns","showGridLines","_c9","Cell","_c10","ColorPreview","_c11","RangeControl","_c12","ToggleButton","active","_c13","UniformityTest","_s","brightness","setBrightness","setIsMinimized","isFullScreen","setIsFullScreen","setShowGridLines","gridSize","setGridSize","selectedColor","setSelectedColor","toggleFullScreen","document","fullscreenElement","documentElement","requestFullscreen","catch","err","console","log","message","exitFullscreen","handleFullScreenChange","addEventListener","removeEventListener","getBackgroundColor","colors","red","green","blue","black","white","handleReset","children","onClick","window","history","back","viewBox","fill","stroke","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","Array","map","_","i","style","display","gridTemplateColumns","gap","marginBottom","charAt","toUpperCase","slice","type","min","max","value","onChange","e","Number","target","_c14","$RefreshReg$"],"sources":["c:/Users/bryan/Documents/GitHub/display-test.app/client/src/pages/tests/UniformityTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst TestContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.color};\n  transition: background-color 0.3s ease;\n`;\n\nconst ExitButton = styled.button`\n  position: fixed;\n  top: 1.5rem;\n  left: 1.5rem;\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1.25rem;\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s ease;\n  z-index: 100;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.9);\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nconst FullScreenButton = styled(ExitButton)`\n  left: auto;\n  right: 1.5rem;\n`;\n\nconst ControlPanel = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.15);\n  width: 400px;\n  padding: ${props => props.isMinimized ? '1.25rem' : '2rem'};\n  color: #333;\n  transition: all 0.3s ease;\n  transform: translateY(${props => props.isMinimized ? 'calc(100% - 4rem)' : '0'});\n  backdrop-filter: blur(10px);\n  max-height: calc(100vh - 4rem);\n  overflow-y: auto;\n`;\n\nconst PanelHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${props => props.isMinimized ? '0' : '1.5rem'};\n  padding-bottom: ${props => props.isMinimized ? '0' : '1rem'};\n  border-bottom: ${props => props.isMinimized ? 'none' : '1px solid rgba(0, 0, 0, 0.1)'};\n\n  h2 {\n    margin: 0;\n    font-size: 1.1rem;\n    font-weight: 600;\n    color: #333;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n\nconst MinimizeButton = styled.button`\n  background: #4169e1;\n  border: none;\n  color: white;\n  font-size: 1.75rem;\n  cursor: pointer;\n  width: 2.5rem;\n  height: 2.5rem;\n  line-height: 1;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  padding: 0;\n  \n  &:hover {\n    background: #3658c5;\n    transform: translateY(-1px);\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n`;\n\nconst Description = styled.p`\n  color: #666;\n  line-height: 1.6;\n  margin-bottom: 2rem;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 2rem;\n\n  h3 {\n    font-size: 0.9rem;\n    color: #666;\n    margin-bottom: 1rem;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n  }\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.columns}, 1fr);\n  gap: ${props => props.showGridLines ? '1px' : '0'};\n  background: ${props => props.showGridLines ? '#333' : 'transparent'};\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst Cell = styled.div`\n  background: ${props => props.color};\n  width: 100%;\n  height: 100%;\n  transition: background-color 0.3s ease;\n`;\n\nconst ColorPreview = styled.div`\n  width: 100%;\n  height: 40px;\n  background: ${props => props.color};\n  border-radius: 0.5rem;\n  margin-bottom: 1rem;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst RangeControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n\n  label {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #666;\n  }\n\n  input[type=\"range\"] {\n    width: 100%;\n  }\n`;\n\nconst ToggleButton = styled.button`\n  background: ${props => props.active ? '#4169e1' : '#f0f0f0'};\n  color: ${props => props.active ? 'white' : '#666'};\n  border: none;\n  border-radius: 0.5rem;\n  padding: 0.75rem 1rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  width: 100%;\n  \n  &:hover {\n    background: ${props => props.active ? '#3658c5' : '#e0e0e0'};\n  }\n`;\n\nconst UniformityTest = () => {\n  const [brightness, setBrightness] = useState(50);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [showGridLines, setShowGridLines] = useState(false);\n  const [gridSize, setGridSize] = useState(3);\n  const [selectedColor, setSelectedColor] = useState('white');\n\n  const toggleFullScreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen().catch((err) => {\n        console.log(`Error attempting to enable fullscreen: ${err.message}`);\n      });\n      setIsFullScreen(true);\n    } else {\n      document.exitFullscreen();\n      setIsFullScreen(false);\n    }\n  };\n\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(!!document.fullscreenElement);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n\n  const getBackgroundColor = () => {\n    if (selectedColor === 'white') {\n      return `rgb(${brightness * 2.55}, ${brightness * 2.55}, ${brightness * 2.55})`;\n    }\n    const colors = {\n      red: `rgb(${brightness * 2.55}, 0, 0)`,\n      green: `rgb(0, ${brightness * 2.55}, 0)`,\n      blue: `rgb(0, 0, ${brightness * 2.55})`,\n      black: 'rgb(0, 0, 0)',\n    };\n    return colors[selectedColor] || colors.white;\n  };\n\n  const handleReset = () => {\n    setBrightness(50);\n    setGridSize(3);\n    setShowGridLines(false);\n    setSelectedColor('white');\n  };\n\n  return (\n    <TestContainer color={getBackgroundColor()}>\n      <ExitButton onClick={() => window.history.back()}>\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n          <path d=\"M15 19l-7-7 7-7\" />\n        </svg>\n        Exit Test\n      </ExitButton>\n\n      <FullScreenButton onClick={toggleFullScreen}>\n        {isFullScreen ? (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\" />\n            </svg>\n            Exit Full Screen\n          </>\n        ) : (\n          <>\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M3 8V3h5M3 16v5h5m8-5v5h5M21 8V3h-5\" />\n            </svg>\n            Full Screen\n          </>\n        )}\n      </FullScreenButton>\n\n      {showGridLines && (\n        <Grid columns={gridSize} showGridLines={showGridLines}>\n          {Array(gridSize * gridSize).fill(0).map((_, i) => (\n            <Cell key={i} color={getBackgroundColor()} />\n          ))}\n        </Grid>\n      )}\n\n      <ControlPanel isMinimized={isMinimized}>\n        <PanelHeader isMinimized={isMinimized}>\n          <h2>Uniformity Controls</h2>\n          <MinimizeButton onClick={() => setIsMinimized(!isMinimized)}>\n            {isMinimized ? (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M18 15l-6-6-6 6\" />\n              </svg>\n            ) : (\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                <path d=\"M6 9l6 6 6-6\" />\n              </svg>\n            )}\n          </MinimizeButton>\n        </PanelHeader>\n\n        {!isMinimized && (\n          <>\n            <Description>\n              Test your display's color and brightness uniformity across the entire screen. \n              Use different colors and grid patterns to identify any inconsistencies in \n              backlight distribution or color reproduction.\n            </Description>\n\n            <Section>\n              <h3>Background Color</h3>\n              <ColorPreview color={getBackgroundColor()} />\n              <div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '0.5rem', marginBottom: '1rem' }}>\n                {['white', 'red', 'green', 'blue', 'black'].map(color => (\n                  <ToggleButton\n                    key={color}\n                    active={selectedColor === color}\n                    onClick={() => setSelectedColor(color)}\n                  >\n                    {color.charAt(0).toUpperCase() + color.slice(1)}\n                  </ToggleButton>\n                ))}\n              </div>\n            </Section>\n\n            <Section>\n              <h3>Brightness</h3>\n              <RangeControl>\n                <label>\n                  <span>Level: {brightness}%</span>\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  value={brightness}\n                  onChange={(e) => setBrightness(Number(e.target.value))}\n                />\n              </RangeControl>\n            </Section>\n\n            <Section>\n              <h3>Grid Pattern</h3>\n              <ToggleButton\n                active={showGridLines}\n                onClick={() => setShowGridLines(!showGridLines)}\n                style={{ marginBottom: '1rem' }}\n              >\n                {showGridLines ? 'Hide Grid' : 'Show Grid'}\n              </ToggleButton>\n              \n              {showGridLines && (\n                <RangeControl>\n                  <label>\n                    <span>Grid Size: {gridSize}x{gridSize}</span>\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"2\"\n                    max=\"8\"\n                    value={gridSize}\n                    onChange={(e) => setGridSize(Number(e.target.value))}\n                  />\n                </RangeControl>\n              )}\n            </Section>\n\n            <Section>\n              <ToggleButton onClick={handleReset}>\n                Reset Settings\n              </ToggleButton>\n            </Section>\n          </>\n        )}\n      </ControlPanel>\n    </TestContainer>\n  );\n};\n\nexport default UniformityTest;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,aAAa,GAAGL,MAAM,CAACM,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAK;AAC1C;AACA,CAAC;AAACC,EAAA,GAZIJ,aAAa;AAcnB,MAAMK,UAAU,GAAGV,MAAM,CAACW,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA9BIF,UAAU;AAgChB,MAAMG,gBAAgB,GAAGb,MAAM,CAACU,UAAU,CAAC;AAC3C;AACA;AACA,CAAC;AAACI,GAAA,GAHID,gBAAgB;AAKtB,MAAME,YAAY,GAAGf,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaC,KAAK,IAAIA,KAAK,CAACS,WAAW,GAAG,SAAS,GAAG,MAAM;AAC5D;AACA;AACA,0BAA0BT,KAAK,IAAIA,KAAK,CAACS,WAAW,GAAG,mBAAmB,GAAG,GAAG;AAChF;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAfIF,YAAY;AAiBlB,MAAMG,WAAW,GAAGlB,MAAM,CAACM,GAAG;AAC9B;AACA;AACA;AACA,mBAAmBC,KAAK,IAAIA,KAAK,CAACS,WAAW,GAAG,GAAG,GAAG,QAAQ;AAC9D,oBAAoBT,KAAK,IAAIA,KAAK,CAACS,WAAW,GAAG,GAAG,GAAG,MAAM;AAC7D,mBAAmBT,KAAK,IAAIA,KAAK,CAACS,WAAW,GAAG,MAAM,GAAG,8BAA8B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAhBID,WAAW;AAkBjB,MAAME,cAAc,GAAGpB,MAAM,CAACW,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAxBID,cAAc;AA0BpB,MAAME,WAAW,GAAGtB,MAAM,CAACuB,CAAC;AAC5B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIF,WAAW;AAMjB,MAAMG,OAAO,GAAGzB,MAAM,CAACM,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GAVID,OAAO;AAYb,MAAME,IAAI,GAAG3B,MAAM,CAACM,GAAG;AACvB;AACA,kCAAkCC,KAAK,IAAIA,KAAK,CAACqB,OAAO;AACxD,SAASrB,KAAK,IAAIA,KAAK,CAACsB,aAAa,GAAG,KAAK,GAAG,GAAG;AACnD,gBAAgBtB,KAAK,IAAIA,KAAK,CAACsB,aAAa,GAAG,MAAM,GAAG,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAVIH,IAAI;AAYV,MAAMI,IAAI,GAAG/B,MAAM,CAACM,GAAG;AACvB,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,KAAK;AACpC;AACA;AACA;AACA,CAAC;AAACwB,IAAA,GALID,IAAI;AAOV,MAAME,YAAY,GAAGjC,MAAM,CAACM,GAAG;AAC/B;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACC,KAAK;AACpC;AACA;AACA;AACA,CAAC;AAAC0B,IAAA,GAPID,YAAY;AASlB,MAAME,YAAY,GAAGnC,MAAM,CAACM,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GAhBID,YAAY;AAkBlB,MAAME,YAAY,GAAGrC,MAAM,CAACW,MAAM;AAClC,gBAAgBJ,KAAK,IAAIA,KAAK,CAAC+B,MAAM,GAAG,SAAS,GAAG,SAAS;AAC7D,WAAW/B,KAAK,IAAIA,KAAK,CAAC+B,MAAM,GAAG,OAAO,GAAG,MAAM;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB/B,KAAK,IAAIA,KAAK,CAAC+B,MAAM,GAAG,SAAS,GAAG,SAAS;AAC/D;AACA,CAAC;AAACC,IAAA,GAbIF,YAAY;AAelB,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,WAAW,EAAE4B,cAAc,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC+B,aAAa,EAAEkB,gBAAgB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkD,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACoD,aAAa,EAAEC,gBAAgB,CAAC,GAAGrD,QAAQ,CAAC,OAAO,CAAC;EAE3D,MAAMsD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACC,QAAQ,CAACC,iBAAiB,EAAE;MAC/BD,QAAQ,CAACE,eAAe,CAACC,iBAAiB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;QAC1DC,OAAO,CAACC,GAAG,CAAC,0CAA0CF,GAAG,CAACG,OAAO,EAAE,CAAC;MACtE,CAAC,CAAC;MACFf,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLO,QAAQ,CAACS,cAAc,CAAC,CAAC;MACzBhB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED/C,SAAS,CAAC,MAAM;IACd,MAAMgE,sBAAsB,GAAGA,CAAA,KAAM;MACnCjB,eAAe,CAAC,CAAC,CAACO,QAAQ,CAACC,iBAAiB,CAAC;IAC/C,CAAC;IAEDD,QAAQ,CAACW,gBAAgB,CAAC,kBAAkB,EAAED,sBAAsB,CAAC;IACrE,OAAO,MAAM;MACXV,QAAQ,CAACY,mBAAmB,CAAC,kBAAkB,EAAEF,sBAAsB,CAAC;IAC1E,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIhB,aAAa,KAAK,OAAO,EAAE;MAC7B,OAAO,OAAOR,UAAU,GAAG,IAAI,KAAKA,UAAU,GAAG,IAAI,KAAKA,UAAU,GAAG,IAAI,GAAG;IAChF;IACA,MAAMyB,MAAM,GAAG;MACbC,GAAG,EAAE,OAAO1B,UAAU,GAAG,IAAI,SAAS;MACtC2B,KAAK,EAAE,UAAU3B,UAAU,GAAG,IAAI,MAAM;MACxC4B,IAAI,EAAE,aAAa5B,UAAU,GAAG,IAAI,GAAG;MACvC6B,KAAK,EAAE;IACT,CAAC;IACD,OAAOJ,MAAM,CAACjB,aAAa,CAAC,IAAIiB,MAAM,CAACK,KAAK;EAC9C,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB9B,aAAa,CAAC,EAAE,CAAC;IACjBM,WAAW,CAAC,CAAC,CAAC;IACdF,gBAAgB,CAAC,KAAK,CAAC;IACvBI,gBAAgB,CAAC,OAAO,CAAC;EAC3B,CAAC;EAED,oBACEjD,OAAA,CAACG,aAAa;IAACG,KAAK,EAAE0D,kBAAkB,CAAC,CAAE;IAAAQ,QAAA,gBACzCxE,OAAA,CAACQ,UAAU;MAACiE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;MAAAJ,QAAA,gBAC/CxE,OAAA;QAAK6E,OAAO,EAAC,WAAW;QAACC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,cAAc;QAACC,WAAW,EAAC,GAAG;QAAAR,QAAA,eACxExE,OAAA;UAAMiF,CAAC,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,aAER;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbrF,OAAA,CAACW,gBAAgB;MAAC8D,OAAO,EAAEvB,gBAAiB;MAAAsB,QAAA,EACzC7B,YAAY,gBACX3C,OAAA,CAAAE,SAAA;QAAAsE,QAAA,gBACExE,OAAA;UAAK6E,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,WAAW,EAAC,GAAG;UAAAR,QAAA,eACxExE,OAAA;YAAMiF,CAAC,EAAC;UAA+F;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG,CAAC,oBAER;MAAA,eAAE,CAAC,gBAEHrF,OAAA,CAAAE,SAAA;QAAAsE,QAAA,gBACExE,OAAA;UAAK6E,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,WAAW,EAAC,GAAG;UAAAR,QAAA,eACxExE,OAAA;YAAMiF,CAAC,EAAC;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eAER;MAAA,eAAE;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,EAElB1D,aAAa,iBACZ3B,OAAA,CAACyB,IAAI;MAACC,OAAO,EAAEoB,QAAS;MAACnB,aAAa,EAAEA,aAAc;MAAA6C,QAAA,EACnDc,KAAK,CAACxC,QAAQ,GAAGA,QAAQ,CAAC,CAACgC,IAAI,CAAC,CAAC,CAAC,CAACS,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC3CzF,OAAA,CAAC6B,IAAI;QAASvB,KAAK,EAAE0D,kBAAkB,CAAC;MAAE,GAA/ByB,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACP,eAEDrF,OAAA,CAACa,YAAY;MAACC,WAAW,EAAEA,WAAY;MAAA0D,QAAA,gBACrCxE,OAAA,CAACgB,WAAW;QAACF,WAAW,EAAEA,WAAY;QAAA0D,QAAA,gBACpCxE,OAAA;UAAAwE,QAAA,EAAI;QAAmB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BrF,OAAA,CAACkB,cAAc;UAACuD,OAAO,EAAEA,CAAA,KAAM/B,cAAc,CAAC,CAAC5B,WAAW,CAAE;UAAA0D,QAAA,EACzD1D,WAAW,gBACVd,OAAA;YAAK6E,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAAAR,QAAA,eACxExE,OAAA;cAAMiF,CAAC,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,gBAENrF,OAAA;YAAK6E,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAACC,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAAAR,QAAA,eACxExE,OAAA;cAAMiF,CAAC,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEb,CAACvE,WAAW,iBACXd,OAAA,CAAAE,SAAA;QAAAsE,QAAA,gBACExE,OAAA,CAACoB,WAAW;UAAAoD,QAAA,EAAC;QAIb;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAEdrF,OAAA,CAACuB,OAAO;UAAAiD,QAAA,gBACNxE,OAAA;YAAAwE,QAAA,EAAI;UAAgB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBrF,OAAA,CAAC+B,YAAY;YAACzB,KAAK,EAAE0D,kBAAkB,CAAC;UAAE;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7CrF,OAAA;YAAK0F,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEC,mBAAmB,EAAE,gBAAgB;cAAEC,GAAG,EAAE,QAAQ;cAAEC,YAAY,EAAE;YAAO,CAAE;YAAAtB,QAAA,EACzG,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAACe,GAAG,CAACjF,KAAK,iBACnDN,OAAA,CAACmC,YAAY;cAEXC,MAAM,EAAEY,aAAa,KAAK1C,KAAM;cAChCmE,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAAC3C,KAAK,CAAE;cAAAkE,QAAA,EAEtClE,KAAK,CAACyF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG1F,KAAK,CAAC2F,KAAK,CAAC,CAAC;YAAC,GAJ1C3F,KAAK;cAAA4E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKE,CACf;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEVrF,OAAA,CAACuB,OAAO;UAAAiD,QAAA,gBACNxE,OAAA;YAAAwE,QAAA,EAAI;UAAU;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBrF,OAAA,CAACiC,YAAY;YAAAuC,QAAA,gBACXxE,OAAA;cAAAwE,QAAA,eACExE,OAAA;gBAAAwE,QAAA,GAAM,SAAO,EAAChC,UAAU,EAAC,GAAC;cAAA;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACRrF,OAAA;cACEkG,IAAI,EAAC,OAAO;cACZC,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC,KAAK;cACTC,KAAK,EAAE7D,UAAW;cAClB8D,QAAQ,EAAGC,CAAC,IAAK9D,aAAa,CAAC+D,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;YAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAEVrF,OAAA,CAACuB,OAAO;UAAAiD,QAAA,gBACNxE,OAAA;YAAAwE,QAAA,EAAI;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBrF,OAAA,CAACmC,YAAY;YACXC,MAAM,EAAET,aAAc;YACtB8C,OAAO,EAAEA,CAAA,KAAM5B,gBAAgB,CAAC,CAAClB,aAAa,CAAE;YAChD+D,KAAK,EAAE;cAAEI,YAAY,EAAE;YAAO,CAAE;YAAAtB,QAAA,EAE/B7C,aAAa,GAAG,WAAW,GAAG;UAAW;YAAAuD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,EAEd1D,aAAa,iBACZ3B,OAAA,CAACiC,YAAY;YAAAuC,QAAA,gBACXxE,OAAA;cAAAwE,QAAA,eACExE,OAAA;gBAAAwE,QAAA,GAAM,aAAW,EAAC1B,QAAQ,EAAC,GAAC,EAACA,QAAQ;cAAA;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACRrF,OAAA;cACEkG,IAAI,EAAC,OAAO;cACZC,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC,GAAG;cACPC,KAAK,EAAEvD,QAAS;cAChBwD,QAAQ,EAAGC,CAAC,IAAKxD,WAAW,CAACyD,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;YAAE;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CACf;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC,eAEVrF,OAAA,CAACuB,OAAO;UAAAiD,QAAA,eACNxE,OAAA,CAACmC,YAAY;YAACsC,OAAO,EAAEF,WAAY;YAAAC,QAAA,EAAC;UAEpC;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,eACV,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC;AAAC9C,EAAA,CAlLID,cAAc;AAAAoE,IAAA,GAAdpE,cAAc;AAoLpB,eAAeA,cAAc;AAAC,IAAA/B,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAE,IAAA,EAAAG,IAAA,EAAAqE,IAAA;AAAAC,YAAA,CAAApG,EAAA;AAAAoG,YAAA,CAAAjG,GAAA;AAAAiG,YAAA,CAAA/F,GAAA;AAAA+F,YAAA,CAAA5F,GAAA;AAAA4F,YAAA,CAAA1F,GAAA;AAAA0F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAArF,GAAA;AAAAqF,YAAA,CAAAnF,GAAA;AAAAmF,YAAA,CAAA/E,GAAA;AAAA+E,YAAA,CAAA7E,IAAA;AAAA6E,YAAA,CAAA3E,IAAA;AAAA2E,YAAA,CAAAzE,IAAA;AAAAyE,YAAA,CAAAtE,IAAA;AAAAsE,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}